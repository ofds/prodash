spring.application.name=prodash-backend
# MongoDB Connection Settings
# Replace with your MongoDB connection string
spring.data.mongodb.uri=mongodb://localhost:27017/prodash

# External API Configuration
# Base URL for the Chamber of Deputies Open Data API
camara.api.base-url=https://dadosabertos.camara.leg.br/api/v2

# Server port
server.port=8080

logging.level.com.prodash=DEBUG
# ===============================================
# LLM / OpenRouter Configuration
# ===============================================
openrouter.api.key=${OPENROUTER_API_KEY}
openrouter.api.url=https://openrouter.ai/api/v1/chat/completions

# The specific model you want to use via OpenRouter
# Example: "google/gemini-pro", "openai/gpt-4o", "mistralai/mistral-7b-instruct"
llm.model.name=deepseek/deepseek-chat-v3-0324:free
llm.batch.initial-size=50
llm.batch.max-size=100
llm.batch.min-size=5
# ===============================================
# ENCODING SETTINGS
# ===============================================
# Força a codificação de caracteres para requisições e respostas HTTP.
server.servlet.encoding.charset=UTF-8
# Habilita o forçar da codificação definida acima.
server.servlet.encoding.force=true

spring.application.name=proposal-ai

# External API Configuration
camara.api.url=https://dadosabertos.camara.leg.br/api/v2

# MongoDB Configuration
spring.data.mongodb.uri=mongodb://localhost:27017/proposalai
